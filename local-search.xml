<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/08/04/Pasted%20image%2020230803215437.png/"/>
    <url>/2023/08/04/Pasted%20image%2020230803215437.png/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hardhat开发</title>
    <link href="/2023/08/04/Hardhat%E5%BC%80%E5%8F%91/"/>
    <url>/2023/08/04/Hardhat%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="Hardhat-项目创建"><a href="#Hardhat-项目创建" class="headerlink" title="Hardhat 项目创建"></a>Hardhat 项目创建</h1><h2 id="安装hardhat"><a href="#安装hardhat" class="headerlink" title="安装hardhat"></a>安装hardhat</h2><p>首先创建一个项目文件夹<br>然后使用<code>yarn init</code>命令初始化项目文件夹<br>接下来就可以直接使用yarn这个包管理工具安装也可以用npm安装</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">yarn <span class="hljs-built_in">add</span> <span class="hljs-comment">--dev hardhat</span><span class="hljs-comment"></span><br><span class="hljs-comment">//or</span><br>npm install <span class="hljs-comment">--save-dev hardhat</span><br></code></pre></td></tr></table></figure><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>使用<br><code>yarn hardhat</code><br>出现如下界面<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308040907881.png" alt="image.png"></p><p>选择创建项目然后一路y到底即可</p><h1 id="项目开发"><a href="#项目开发" class="headerlink" title="项目开发"></a>项目开发</h1><p>只要介绍一下各个文件夹的作用，我这里会议fundme的智能合约为例</p><h2 id="项目环境配置"><a href="#项目环境配置" class="headerlink" title="项目环境配置"></a>项目环境配置</h2><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>首先的重重之重就是环境变量，在开发时会需要用到一些私密的接口以及密钥等不能向外界传播的数据，但是使用频次也比较高，于是我们就可以使用环境变量来操作这些数据。<br>要在项目中使用这个需要安装一个包<br><code>yarn add --dev dotenv</code><br>然后再项目中创建一个.env文件夹用于存放环境变量<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308040929484.png" alt="image.png"></p><h3 id="hardhat-config-js"><a href="#hardhat-config-js" class="headerlink" title="hardhat-config.js"></a>hardhat-config.js</h3><p>然后就是项目中至关重要的一个配置文件，如果没有配置好，那肯定是爆红少不了。<br>测试用的网络配置，插件的配置，以及测试使用的账户配置都在里面<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308040933498.png" alt="image.png"><br>具体的代码如下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><code class="hljs dts">require(<span class="hljs-string">&quot;@nomicfoundation/hardhat-toolbox&quot;</span>)<span class="hljs-punctuation">;</span><br><br>require(<span class="hljs-string">&quot;hardhat-deploy&quot;</span>)<span class="hljs-punctuation">;</span><br><br>require(<span class="hljs-string">&quot;dotenv&quot;</span>).config()<span class="hljs-punctuation">;</span><br><br>require(<span class="hljs-string">&quot;@nomiclabs/hardhat-ethers&quot;</span>)<span class="hljs-punctuation">;</span><br><br>require(<span class="hljs-string">&quot;@nomicfoundation/hardhat-verify&quot;</span>)<span class="hljs-punctuation">;</span><br><br>require(<span class="hljs-string">&quot;hardhat-gas-reporter&quot;</span>)<span class="hljs-punctuation">;</span><br><br>  <br><br><span class="hljs-comment">/** @type import(&#x27;hardhat/config&#x27;).HardhatUserConfig */</span><br><br><span class="hljs-comment">//将环境变量赋值给文件中的变量方便使用</span><br><br>const PRIVATE_KEY = process.env.SEPOLIA_PRIVATE_KEY<span class="hljs-punctuation">;</span><br><br>const SEPOLIA_RPC_URL = process.env.SEPOLIA_RPC_URL<span class="hljs-punctuation">;</span><br><br>const ETHERSCAN_API_KEY = process.env.ETHERSCAN_API_KEY<span class="hljs-punctuation">;</span><br><br>const COINMARKET_API_KEY = process.env.COINMARKET_API_KEY<span class="hljs-punctuation">;</span><br><br>module.<span class="hljs-attr">exports</span> <span class="hljs-operator">=</span> <span class="hljs-punctuation">&#123;</span><br><br>  <span class="hljs-comment">// solidity: &quot;0.8.19&quot;,</span><br><br>  <span class="hljs-comment">//这里是设置solidity的编译版本，通过如下方法可以设置多个版本，只需要一个的花上面的注释内容即可满足</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  solidity:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    compilers:</span> [<span class="hljs-punctuation">&#123;</span> version: <span class="hljs-string">&quot;0.8.8&quot;</span> <span class="hljs-punctuation">&#125;</span>, <span class="hljs-punctuation">&#123;</span> version: <span class="hljs-string">&quot;0.6.6&quot;</span> <span class="hljs-punctuation">&#125;</span>],<br><br>  <span class="hljs-punctuation">&#125;</span>,<br><br>  <span class="hljs-comment">//网络配置，这个主要是公链的配置，本地网络的配置就和之前的ganache差不多，运行yarn hardhat node即可</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  defaultNetwork:</span> <span class="hljs-string">&quot;hardhat&quot;</span>,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  networks:</span> <span class="hljs-punctuation">&#123;</span><br><br>    <span class="hljs-comment">// hardhat: &#123;</span><br><br>    <span class="hljs-comment">//   chainId: 31337,</span><br><br>    <span class="hljs-comment">//   // gasPrice: 130000000000,</span><br><br>    <span class="hljs-comment">// &#125;,</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    sepolia:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      url:</span> SEPOLIA_RPC_URL,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      accounts:</span> [PRIVATE_KEY],<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      chainId:</span> <span class="hljs-number">11155111</span>,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      blockConfirmations:</span> <span class="hljs-number">6</span>,<br><br>    <span class="hljs-punctuation">&#125;</span>,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    localhost:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      url:</span> <span class="hljs-string">&quot;http://127.0.0.1:8545/&quot;</span>,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      chainId:</span> <span class="hljs-number">31337</span>,<br><br>    <span class="hljs-punctuation">&#125;</span>,<br><br>  <span class="hljs-punctuation">&#125;</span>,<br><br>  <span class="hljs-comment">//用于查看合约的部署情况</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  etherscan:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    apiKey:</span> ETHERSCAN_API_KEY,<br><br>  <span class="hljs-punctuation">&#125;</span>,<br><br>  <span class="hljs-comment">//对合约的gas使用情况进行统计</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  gasReporter:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    enabled:</span> false,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    outputFile:</span> <span class="hljs-string">&quot;gas-report.txt&quot;</span>,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    noColors:</span> true,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    currency:</span> <span class="hljs-string">&quot;USD&quot;</span>,<br><br>    <span class="hljs-comment">// coinmarketcap: COINMARKET_API_KEY,</span><br><br>    <span class="hljs-comment">// token: &quot;ETH&quot;,</span><br><br>  <span class="hljs-punctuation">&#125;</span>,<br><br>  <span class="hljs-comment">//使用本地网络时，所用到的账户</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  namedAccounts:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    deployer:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      default:</span> <span class="hljs-number">0</span>,<br><br>    <span class="hljs-punctuation">&#125;</span>,<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    user:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">      default:</span> <span class="hljs-number">1</span>,<br><br>    <span class="hljs-punctuation">&#125;</span>,<br><br>  <span class="hljs-punctuation">&#125;</span>,<br><br><span class="hljs-punctuation">&#125;;</span><br></code></pre></td></tr></table></figure><h3 id="mocking"><a href="#mocking" class="headerlink" title="mocking"></a>mocking</h3><p>由于在使用本地网络时无法像在网络上一样得知加密货币与真实货币之间的汇率。<br>我们需要使用solidity搭建一个会在本地返回汇率的工具；<br>这个可以在github上找到这个<br><a href="https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/FluxAggregator.sol">sol代码</a><br>可以将它直接复制到本地编译也可以通过import把它导入到本地<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041113490.png" alt="image.png"><br>至于这个solidity的版本我并没有去尝试更多版本，毕竟这中版本引起的报错真的太难解决了。把这个合约代码写好之后就需要将它部署。因此还需要写一个部署脚本；<br>在部署我们的fundme合约之前部署它即可。<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041116656.png" alt="image.png"><br>由于他们是按顺序执行的脚本所以我们将脚本编号；<br>部署的代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; network &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123;<br><br>  developmentChains,<br><br>  <span class="hljs-variable constant_">DECIMALS</span>,<br><br>  <span class="hljs-variable constant_">INITIAL_ANSWER</span>,<br><br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../helper-hardhat-config&quot;</span>);<br><br>  <br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-keyword">async</span> (&#123; getNamedAccounts, deployments &#125;) =&gt; &#123;<br><br>  <span class="hljs-keyword">const</span> &#123; deploy, log &#125; = deployments;<br><br>  <span class="hljs-keyword">const</span> &#123; deployer &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getNamedAccounts</span>();<br><br>  <span class="hljs-keyword">const</span> chainId = network.<span class="hljs-property">config</span>.<span class="hljs-property">chainId</span>;<br><br>  <br><br>  <span class="hljs-keyword">if</span> (developmentChains.<span class="hljs-title function_">includes</span>(network.<span class="hljs-property">name</span>)) &#123;<br><br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Local network detected! Deploying mocks..&quot;</span>);<br><br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">deploy</span>(<span class="hljs-string">&quot;MockV3Aggregator&quot;</span>, &#123;<br><br>      <span class="hljs-attr">contract</span>: <span class="hljs-string">&quot;MockV3Aggregator&quot;</span>,<br><br>      <span class="hljs-attr">from</span>: deployer,<br><br>      <span class="hljs-attr">log</span>: <span class="hljs-literal">true</span>,<br><br>      <span class="hljs-comment">/*下面是传入MockV3Aggregator中的构造参数*/</span><br><br>      <span class="hljs-attr">args</span>: [<span class="hljs-variable constant_">DECIMALS</span>, <span class="hljs-variable constant_">INITIAL_ANSWER</span>],<br><br>    &#125;);<br><br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Mocks deployed!&quot;</span>);<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;-------------------------------------------&quot;</span>);<br><br>  &#125;<br><br>&#125;;<br><br>  <br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>.<span class="hljs-property">tags</span> = [<span class="hljs-string">&quot;all&quot;</span>, <span class="hljs-string">&quot;mocks&quot;</span>];<br></code></pre></td></tr></table></figure><p>讲到这个mocks的部署代码就不得不讲一下helper-hardhat-config.js中的网络设置了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">const</span> <span class="hljs-variable">networkConfig</span> <span class="hljs-operator">=</span> &#123;<br><br>  <span class="hljs-number">11155111</span>: &#123;<br><br>    name: <span class="hljs-string">&quot;sepolia&quot;</span>,<br><br>    ethUsdPriceFeed: <span class="hljs-string">&quot;0x694AA1769357215DE4FAC081bf1f309aDC325306&quot;</span>,<br><br>  &#125;,<br><br>&#125;;<br><br><span class="hljs-type">const</span> <span class="hljs-variable">developmentChains</span> <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;hardhat&quot;</span>, <span class="hljs-string">&quot;localhost&quot;</span>];<br><span class="hljs-comment">//传递给mock的参数用来初始化feedprice</span><br><span class="hljs-type">const</span> <span class="hljs-variable">DECIMALS</span> <span class="hljs-operator">=</span> <span class="hljs-number">8</span>;<br><br><span class="hljs-type">const</span> <span class="hljs-variable">INITIAL_ANSWER</span> <span class="hljs-operator">=</span> <span class="hljs-number">200000000000</span>;<br><br><span class="hljs-keyword">module</span>.<span class="hljs-keyword">exports</span> = &#123;<br><br>  networkConfig,<br><br>  developmentChains,<br><br>  DECIMALS,<br><br>  INITIAL_ANSWER,<br><br>&#125;;<br></code></pre></td></tr></table></figure><p>这个配置文件可以根据运行时包含的网络选项，从而获取相应的FeedPrice，后面module.exports中的变量可以在导入了这个包中的其他文件中使用</p><h1 id="合约代码及脚本的编写"><a href="#合约代码及脚本的编写" class="headerlink" title="合约代码及脚本的编写"></a>合约代码及脚本的编写</h1><h2 id="合约"><a href="#合约" class="headerlink" title="合约"></a>合约</h2><h3 id="Fundme"><a href="#Fundme" class="headerlink" title="Fundme"></a>Fundme</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//从用户获取资金</span><br><br><span class="hljs-comment">//撤出资金</span><br><br><span class="hljs-comment">//设置最小支付金额美元</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> @title Storage相关笔记</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> @author</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> @notice immutable和constant还有function中的变量均不会使用Storage中的空间，</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span>正常命名的变量都会使用storage中的地址，数组只会将数组长度存储在storage中，</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span>然后通过哈希函数操作得到地址存储位置</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span>此外constant变量会直接存储在字节码中</span><br><br><span class="hljs-comment">//SPDX-License-Identifier:MIT</span><br><br>pragma solidity ^<span class="hljs-number">0.8</span><span class="hljs-number">.8</span>;<br><br>  <br><br>import <span class="hljs-string">&quot;./PriceConvert.sol&quot;</span>;<br><br>import <span class="hljs-string">&quot;hardhat/console.sol&quot;</span>;<br><br><span class="hljs-function">error <span class="hljs-title">Fundme__NotOwner</span>()</span>;<br><br>  <br><br>contract Fundme &#123;<br><br>    <span class="hljs-comment">//命名规则:immutable变量以i_price，storage变量以s_price;</span><br><br>    <span class="hljs-keyword">using</span> PriceConvert <span class="hljs-keyword">for</span> uint256;<br><br>    uint256 <span class="hljs-keyword">private</span> constant MINIMUMCNY = <span class="hljs-number">50</span> * <span class="hljs-number">10</span> ** <span class="hljs-number">18</span>;<br><br>  <br><br>    address[] <span class="hljs-keyword">private</span> s_funders;<br><br>    mapping(address =&gt; <span class="hljs-built_in">uint</span>) <span class="hljs-keyword">private</span> s_addresstoAmountfunded;<br><br>    address <span class="hljs-keyword">private</span> immutable i_owner;<br><br>    AggregatorV3Interface <span class="hljs-keyword">private</span> s_priceFeed;<br><br>  <br><br>    constructor(address priceFeedAddress) &#123;<br><br>        <span class="hljs-comment">// console.log(&quot;now we constructing&quot;);</span><br><br>        i_owner = msg.sender;<br><br>        s_priceFeed = AggregatorV3Interface(priceFeedAddress);<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">fund</span>() <span class="hljs-keyword">public</span> payable</span> &#123;<br><br>        require(<br><br>            msg.<span class="hljs-keyword">value</span>.GetConversionRate(s_priceFeed) &gt;= MINIMUMCNY,<br><br>            <span class="hljs-string">&quot;You need to speed more ETH&quot;</span><br><br>        );<br><br>        s_funders.push(msg.sender);<br><br>        s_addresstoAmountfunded[msg.sender] = msg.<span class="hljs-keyword">value</span>;<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">Withdraw</span>() <span class="hljs-keyword">public</span> onlyOwner</span> &#123;<br><br>        <span class="hljs-keyword">for</span> (<br><br>            uint256 funderIndex = <span class="hljs-number">0</span>;<br><br>            funderIndex &lt; s_funders.length;<br><br>            funderIndex++<br><br>        ) &#123;<br><br>            address funder = s_funders[funderIndex];<br><br>            s_addresstoAmountfunded[funder] = <span class="hljs-number">0</span>;<br><br>        &#125;<br><br>  <br><br>        s_funders = <span class="hljs-keyword">new</span> address[](<span class="hljs-number">0</span>); <span class="hljs-comment">//清空数组</span><br><br>  <br><br>        <span class="hljs-comment">//call</span><br><br>        (<span class="hljs-built_in">bool</span> callSuccess, ) = payable(msg.sender).call&#123;<br><br>            <span class="hljs-keyword">value</span>: address(<span class="hljs-keyword">this</span>).balance<br><br>        &#125;(<span class="hljs-string">&quot;&quot;</span>);<br><br>        require(callSuccess, <span class="hljs-string">&quot;call failed&quot;</span>);<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">cheaperWithdraw</span>() <span class="hljs-keyword">public</span> onlyOwner</span> &#123;<br><br>        address[] memory funders = s_funders;<br><br>        <span class="hljs-keyword">for</span> (<br><br>            uint256 funderIndex = <span class="hljs-number">0</span>;<br><br>            funderIndex &lt; funders.length;<br><br>            funderIndex++<br><br>        ) &#123;<br><br>            address funder = funders[funderIndex];<br><br>            s_addresstoAmountfunded[funder] = <span class="hljs-number">0</span>;<br><br>        &#125;<br><br>  <br><br>        s_funders = <span class="hljs-keyword">new</span> address[](<span class="hljs-number">0</span>); <span class="hljs-comment">//清空数组</span><br><br>  <br><br>        <span class="hljs-comment">//call</span><br><br>        (<span class="hljs-built_in">bool</span> callSuccess, ) = payable(msg.sender).call&#123;<br><br>            <span class="hljs-keyword">value</span>: address(<span class="hljs-keyword">this</span>).balance<br><br>        &#125;(<span class="hljs-string">&quot;&quot;</span>);<br><br>        require(callSuccess, <span class="hljs-string">&quot;call failed&quot;</span>);<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-comment">//在其他函数前面加上这个修饰器的名字在函数运行前会先进行这里面的判断</span><br><br>    <span class="hljs-comment">//&quot;_;&quot;表是其他代码放在修饰器最前面表示修饰器最后判断，放在最后面表示修饰器最现判断</span><br><br>    <span class="hljs-function">modifier <span class="hljs-title">onlyOwner</span>()</span> &#123;<br><br>        <span class="hljs-comment">// require(msg.sender==owner,Notowner());</span><br><br>        <span class="hljs-keyword">if</span> (msg.sender != i_owner) &#123;<br><br>            <span class="hljs-function">revert <span class="hljs-title">Fundme__NotOwner</span>()</span>;<br><br>        &#125;<br><br>        _;<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">getOwner</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params">address</span>)</span> &#123;<br><br>        <span class="hljs-keyword">return</span> i_owner;<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">getAddressToAmountFunded</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function"></span></span><br><span class="hljs-params"><span class="hljs-function">        address fundingAddress</span></span><br><span class="hljs-params"><span class="hljs-function"></span></span><br><span class="hljs-params"><span class="hljs-function">    </span>) <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params">uint256</span>)</span> &#123;<br><br>        <span class="hljs-keyword">return</span> s_addresstoAmountfunded[fundingAddress];<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">getVersion</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params">uint256</span>)</span> &#123;<br><br>        <span class="hljs-keyword">return</span> s_priceFeed.version();<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">getFunder</span>(<span class="hljs-params">uint256 index</span>) <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params">address</span>)</span> &#123;<br><br>        <span class="hljs-keyword">return</span> s_funders[index];<br><br>    &#125;<br><br>  <br><br>    <span class="hljs-function">function <span class="hljs-title">getPriceFeed</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params">AggregatorV3Interface</span>)</span> &#123;<br><br>        <span class="hljs-keyword">return</span> s_priceFeed;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="PriceFeed"><a href="#PriceFeed" class="headerlink" title="PriceFeed"></a>PriceFeed</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">//SPXD-License-Identifier:MIT<br><br>pragma solidity ^<span class="hljs-number">0.8</span><span class="hljs-number">.8</span>;<br><br>  <br><br><span class="hljs-keyword">import</span> &quot;@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol&quot;;<br><br>  <br><br>library PriceConvert &#123;<br><br>    <span class="hljs-keyword">function</span> GetPrice(<br><br>        AggregatorV3Interface priceFeed<br><br>    ) <span class="hljs-type">internal</span> <span class="hljs-keyword">view</span> <span class="hljs-keyword">returns</span> (uint256) &#123;<br><br>        (, <span class="hljs-type">int</span> price, , , ) = priceFeed.latestRoundData();<br><br>        <span class="hljs-keyword">return</span> uint256(price * <span class="hljs-number">1e10</span>);<br><br>    &#125;<br><br>  <br><br>    // <span class="hljs-keyword">function</span> Getversion() <span class="hljs-type">internal</span> <span class="hljs-keyword">view</span> <span class="hljs-keyword">returns</span>(uint256)&#123;<br><br>    // AggregatorV3Interface priceFeed=AggregatorV3Interface(<span class="hljs-number">0x694AA1769357215DE4FAC081bf1f309aDC325306</span>);<br><br>    // <span class="hljs-keyword">return</span> priceFeed.version();<br><br>    //  &#125;<br><br>    <span class="hljs-keyword">function</span> GetConversionRate(<br><br>        uint256 ethAmount,<br><br>        AggregatorV3Interface priceFeed<br><br>    ) <span class="hljs-type">internal</span> <span class="hljs-keyword">view</span> <span class="hljs-keyword">returns</span> (uint256) &#123;<br><br>        uint256 ethprice = GetPrice(priceFeed);<br><br>        uint256 ethAmountInCn = (ethprice * ethAmount) / <span class="hljs-number">1e18</span>;<br><br>        <span class="hljs-keyword">return</span> ethAmountInCn;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="mocks部署脚本"><a href="#mocks部署脚本" class="headerlink" title="mocks部署脚本"></a>mocks部署脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; network &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123;<br><br>  developmentChains,<br><br>  <span class="hljs-variable constant_">DECIMALS</span>,<br><br>  <span class="hljs-variable constant_">INITIAL_ANSWER</span>,<br><br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../helper-hardhat-config&quot;</span>);<br><br>  <br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-keyword">async</span> (&#123; getNamedAccounts, deployments &#125;) =&gt; &#123;<br><br>  <span class="hljs-keyword">const</span> &#123; deploy, log &#125; = deployments;<br><br>  <span class="hljs-keyword">const</span> &#123; deployer &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getNamedAccounts</span>();<br><br>  <span class="hljs-keyword">const</span> chainId = network.<span class="hljs-property">config</span>.<span class="hljs-property">chainId</span>;<br><br>  <br><br>  <span class="hljs-keyword">if</span> (developmentChains.<span class="hljs-title function_">includes</span>(network.<span class="hljs-property">name</span>)) &#123;<br><br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Local network detected! Deploying mocks..&quot;</span>);<br><br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">deploy</span>(<span class="hljs-string">&quot;MockV3Aggregator&quot;</span>, &#123;<br><br>      <span class="hljs-attr">contract</span>: <span class="hljs-string">&quot;MockV3Aggregator&quot;</span>,<br><br>      <span class="hljs-attr">from</span>: deployer,<br><br>      <span class="hljs-attr">log</span>: <span class="hljs-literal">true</span>,<br><br>      <span class="hljs-comment">/*下面是传入MockV3Aggregator中的构造参数*/</span><br><br>      <span class="hljs-attr">args</span>: [<span class="hljs-variable constant_">DECIMALS</span>, <span class="hljs-variable constant_">INITIAL_ANSWER</span>],<br><br>    &#125;);<br><br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Mocks deployed!&quot;</span>);<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;-------------------------------------------&quot;</span>);<br><br>  &#125;<br><br>&#125;;<br><br>  <br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>.<span class="hljs-property">tags</span> = [<span class="hljs-string">&quot;all&quot;</span>, <span class="hljs-string">&quot;mocks&quot;</span>];<br></code></pre></td></tr></table></figure><h3 id="Fundme部署脚本"><a href="#Fundme部署脚本" class="headerlink" title="Fundme部署脚本"></a>Fundme部署脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// async function deployFunc(hre)&#123;</span><br><br><span class="hljs-comment">// hre.getNamedAccounts()</span><br><br><span class="hljs-comment">// hre.deployments</span><br><br>  <br><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// module.exports.default=deployFunc</span><br><br><span class="hljs-comment">//上面的module.exports和下面的写法作用相同</span><br><br><span class="hljs-comment">// module.exports=async(hre)=&gt;&#123;</span><br><br><span class="hljs-comment">//     const&#123;getNamedAccount,deployments&#125;=hre;</span><br><br><span class="hljs-comment">// &#125;</span><br><br>  <br><br><span class="hljs-comment">//const helperConfig=require(&quot;../helper-hardhat-config&quot;)</span><br><br><span class="hljs-comment">//const networkConfig=helperConfig.networkConfig</span><br><br><span class="hljs-keyword">const</span> &#123;<br><br>  networkConfig,<br><br>  developmentChains,<br><br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../helper-hardhat-config&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123; network &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123; verify &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../utils/verify&quot;</span>);<br><br>  <br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-keyword">async</span> (&#123; getNamedAccounts, deployments &#125;) =&gt; &#123;<br><br>  <span class="hljs-keyword">const</span> &#123; deploy, log &#125; = deployments;<br><br>  <span class="hljs-keyword">const</span> &#123; deployer &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getNamedAccounts</span>();<br><br>  <span class="hljs-keyword">const</span> chainId = network.<span class="hljs-property">config</span>.<span class="hljs-property">chainId</span>;<br><br>  <br><br>  <span class="hljs-keyword">let</span> ethUsdPriceFeedAddress;<br><br>  <span class="hljs-keyword">if</span> (developmentChains.<span class="hljs-title function_">includes</span>(network.<span class="hljs-property">name</span>)) &#123;<br><br>    <span class="hljs-keyword">const</span> ethUsdAggregator = <span class="hljs-keyword">await</span> deployments.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;MockV3Aggregator&quot;</span>);<br><br>    ethUsdPriceFeedAddress = ethUsdAggregator.<span class="hljs-property">address</span>;<br><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br><br>    ethUsdPriceFeedAddress = networkConfig[chainId][<span class="hljs-string">&quot;ethUsdPriceFeed&quot;</span>];<br><br>  &#125;<br><br>  <span class="hljs-keyword">const</span> args = [ethUsdPriceFeedAddress];<br><br>  <br><br>  <span class="hljs-keyword">const</span> fundMe = <span class="hljs-keyword">await</span> <span class="hljs-title function_">deploy</span>(<span class="hljs-string">&quot;Fundme&quot;</span>, &#123;<br><br>    <span class="hljs-attr">from</span>: deployer,<br><br>    <span class="hljs-attr">args</span>: args,<br><br>    <span class="hljs-attr">log</span>: <span class="hljs-literal">true</span>,<br><br>    <span class="hljs-attr">waitConfirmations</span>: network.<span class="hljs-property">config</span>.<span class="hljs-property">blockConfirmations</span> || <span class="hljs-number">1</span>,<br><br>  &#125;);<br><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fundme deployed&quot;</span>);<br><br>  <span class="hljs-keyword">if</span> (<br><br>    !developmentChains.<span class="hljs-title function_">includes</span>(network.<span class="hljs-property">name</span>) &amp;&amp;<br><br>    process.<span class="hljs-property">env</span>.<span class="hljs-property">ETHERSCAN_API_KEY</span><br><br>  ) &#123;<br><br>    <span class="hljs-comment">//verify</span><br><br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">verify</span>(fundMe.<span class="hljs-property">address</span>, args);<br><br>  &#125;<br><br>  <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;----------------------------------------------------&quot;</span>);<br><br>  <br><br>  <span class="hljs-comment">// const ethUsdPriceFeedAddress = networkConfig[chainId][&quot;ethUsdPricceFeed&quot;];</span><br><br>&#125;;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>.<span class="hljs-property">tags</span> = [<span class="hljs-string">&quot;all&quot;</span>, <span class="hljs-string">&quot;fundme&quot;</span>];<br></code></pre></td></tr></table></figure><p>在不部署之后需要对合约进行验证，即verify，但是在verify之前需要等待6各区块我们的部署的这个交易才能确定上链所以这里调用了hardhat.config中的blockConfirmations。</p><h3 id="verify"><a href="#verify" class="headerlink" title="verify"></a>verify</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; run &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">verify</span>(<span class="hljs-params">contractAddress, args</span>) &#123;<br><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Verifying contract...&quot;</span>);<br><br>  <span class="hljs-keyword">try</span> &#123;<br><br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">run</span>(<span class="hljs-string">&quot;verify:verify&quot;</span>, &#123;<br><br>      <span class="hljs-attr">address</span>: contractAddress,<br><br>      <span class="hljs-attr">constructorArguments</span>: args,<br><br>    &#125;);<br><br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br><br>    <span class="hljs-keyword">if</span> (e.<span class="hljs-property">message</span>.<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;already verified&quot;</span>)) &#123;<br><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Already Verified!&quot;</span>);<br><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);<br><br>    &#125;<br><br>  &#125;<br><br>&#125;<br><br>  <br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123; verify &#125;;<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><p>这个测试是在本地运行的，花了很多时间用来修改因为版本问题出现的报错，注意事项写在代码的注释里了，不再赘述</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br></pre></td><td class="code"><pre><code class="hljs java">const &#123; deployments, ethers, getNamedAccounts &#125; = require(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br>const &#123; <span class="hljs-keyword">assert</span>, expect &#125; = require(<span class="hljs-string">&quot;chai&quot;</span>);<br><br>const &#123;<br><br>  experimentalAddHardhatNetworkMessageTraceHook,<br><br>&#125; = require(<span class="hljs-string">&quot;hardhat/config&quot;</span>);<br><br>const &#123; developmentChains &#125; = require(<span class="hljs-string">&quot;../../helper-hardhat-config.js&quot;</span>);<br><br>  <br><br><span class="hljs-comment">//describe这里的async要去掉要不然无法运行</span><br><br>!developmentChains.includes(network.name)<br><br>  ? describe.skip<br><br>  : describe(<span class="hljs-string">&quot;fundme&quot;</span>, function () &#123;<br><br>      let fundMe;<br><br>      let deployer;<br><br>      let mockV3Aggregator;<br><br>      <span class="hljs-type">let</span> <span class="hljs-variable">sendValue</span> <span class="hljs-operator">=</span> ethers.parseEther(<span class="hljs-string">&quot;1&quot;</span>);<br><br>      beforeEach(async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>        <span class="hljs-comment">// console.log(sendValue);</span><br><br>        <span class="hljs-comment">//两种获取</span><br><br>        <span class="hljs-comment">//const accounts=await ethers.getSigners()</span><br><br>        <span class="hljs-comment">//const accountZero =accounts[0]</span><br><br>        deployer = (await <span class="hljs-title function_">getNamedAccounts</span><span class="hljs-params">()</span>).deployer;<br><br>        await deployments.fixture([<span class="hljs-string">&quot;all&quot;</span>]);<br><br>        fundMe = await ethers.getContract(<span class="hljs-string">&quot;Fundme&quot;</span>, deployer);<br><br>        mockV3Aggregator = await ethers.getContract(<br><br>          <span class="hljs-string">&quot;MockV3Aggregator&quot;</span>,<br><br>          deployer<br><br>        );<br><br>      &#125;);<br><br>      describe(<span class="hljs-string">&quot;constractor&quot;</span>, function () &#123;<br><br>        it(<span class="hljs-string">&quot;sets the aggregator addresses correctly&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> await fundMe.getPriceFeed();<br><br>          <span class="hljs-comment">//这里因为版本问题需要把address改成target或者getAddress()</span><br><br>          <span class="hljs-keyword">assert</span>.equal(response, mockV3Aggregator.target);<br><br>        &#125;);<br><br>      &#125;);<br><br>      describe(<span class="hljs-string">&quot;fund&quot;</span>, function () &#123;<br><br>        it(<span class="hljs-string">&quot;Fails if you don&#x27;t send enough ETH&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          await <span class="hljs-title function_">expect</span><span class="hljs-params">(fundMe.fund()</span>).to.be.revertedWith(<br><br>            <span class="hljs-string">&quot;You need to speed more ETH&quot;</span><br><br>          );<br><br>        &#125;);<br><br>        it(<span class="hljs-string">&quot;update the amount funded data structure&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          await fundMe.fund(&#123; value: sendValue &#125;);<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> await fundMe.getAddressToAmountFunded(deployer);<br><br>          <span class="hljs-keyword">assert</span>.equal(response.toString(), sendValue.toString());<br><br>        &#125;);<br><br>        it(<span class="hljs-string">&quot;Adds s_funder to array of getFunder&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          await fundMe.fund(&#123; value: sendValue &#125;);<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">s_funder</span> <span class="hljs-operator">=</span> await fundMe.getFunder(<span class="hljs-number">0</span>);<br><br>          <span class="hljs-keyword">assert</span>.equal(s_funder, deployer);<br><br>        &#125;);<br><br>      &#125;);<br><br>      describe(<span class="hljs-string">&quot;withdraw&quot;</span>, function () &#123;<br><br>        beforeEach(async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          await fundMe.fund(&#123; value: sendValue &#125;);<br><br>        &#125;);<br><br>  <br><br>        it(<span class="hljs-string">&quot;Withdraw ETH from a single founder&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.getAddress()<br><br>          );<br><br>          <span class="hljs-comment">//console.log(startingFundMeBalance);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingDeployBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-comment">//console.log(startingDeployBalance);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionResponse</span> <span class="hljs-operator">=</span> await fundMe.Withdraw();<br><br>          <span class="hljs-comment">//这里原本是fundMe.provider.getBalance但是v6变成了现在这样</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionReceipt</span> <span class="hljs-operator">=</span> await transactionResponse.wait();<br><br>          <span class="hljs-comment">//通过调试得知这个不是effectivegasPrice而是gasPrice</span><br><br>          const &#123; gasUsed, gasPrice &#125; = transactionReceipt;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">gasCost</span> <span class="hljs-operator">=</span> gasUsed * gasPrice;<br><br>          <span class="hljs-comment">//console.log(gasCost);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.getAddress()<br><br>          );<br><br>          <span class="hljs-comment">//console.log(endingFundMeBalance);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingDeployerBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-keyword">assert</span>.equal(endingFundMeBalance, <span class="hljs-number">0</span>);<br><br>          <span class="hljs-keyword">assert</span>.equal(<br><br>            (startingFundMeBalance + startingDeployBalance).toString(),<br><br>            (endingDeployerBalance + gasCost).toString()<br><br>          );<br><br>        &#125;);<br><br>        it(<span class="hljs-string">&quot;allows us to withdraw with multiple getFunder&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">accounts</span> <span class="hljs-operator">=</span> await ethers.getSigners();<br><br>          <span class="hljs-keyword">for</span> (<span class="hljs-type">let</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">6</span>; i++) &#123;<br><br>            <span class="hljs-type">const</span> <span class="hljs-variable">fundMeConnectedContract</span> <span class="hljs-operator">=</span> await fundMe.connect(accounts[i]);<br><br>            await fundMeConnectedContract.fund(&#123; value: sendValue &#125;);<br><br>          &#125;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.target<br><br>          );<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingDeployerBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionResponse</span> <span class="hljs-operator">=</span> await fundMe.Withdraw();<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionReceipt</span> <span class="hljs-operator">=</span> await transactionResponse.wait();<br><br>          const &#123; gasUsed, gasPrice &#125; = transactionReceipt;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">gasCost</span> <span class="hljs-operator">=</span> gasUsed * gasPrice;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.getAddress()<br><br>          );<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingDeployerBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-keyword">assert</span>.equal(endingFundMeBalance, <span class="hljs-number">0</span>);<br><br>          <span class="hljs-keyword">assert</span>.equal(<br><br>            (startingFundMeBalance + startingDeployerBalance).toString(),<br><br>            (endingDeployerBalance + gasCost).toString()<br><br>          );<br><br>          <span class="hljs-comment">//这里的getFunder改成了gets_funder,但是不改好像没问题</span><br><br>          await <span class="hljs-title function_">expect</span><span class="hljs-params">(fundMe.getFunder(<span class="hljs-number">0</span>)</span>).to.be.reverted;<br><br>          <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">6</span>; i++) &#123;<br><br>            <span class="hljs-keyword">assert</span>.equal(<br><br>              await fundMe.getAddressToAmountFunded(accounts[i].address),<br><br>              <span class="hljs-number">0</span><br><br>            );<br><br>          &#125;<br><br>        &#125;);<br><br>        it(<span class="hljs-string">&quot;Only allows the owner to withdraw&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">accounts</span> <span class="hljs-operator">=</span> await ethers.getSigners();<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">attacker</span> <span class="hljs-operator">=</span> accounts[<span class="hljs-number">1</span>];<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">attackerConnectedContract</span> <span class="hljs-operator">=</span> await fundMe.connect(attacker);<br><br>          <span class="hljs-comment">//这里需要修改revertedWith(&quot;FundMe__NotOwner&quot;)编程下面的样子，可能是因为这是用户自定义错误的问题吧</span><br><br>          await <span class="hljs-title function_">expect</span><span class="hljs-params">(</span><br><span class="hljs-params"></span><br><span class="hljs-params">            attackerConnectedContract.Withdraw()</span><br><br>          ).to.be.revertedWithCustomError(fundMe, <span class="hljs-string">&quot;Fundme__NotOwner&quot;</span>);<br><br>        &#125;);<br><br>      &#125;);<br><br>      describe(<span class="hljs-string">&quot;cheaperwithdraw&quot;</span>, function () &#123;<br><br>        beforeEach(async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          await fundMe.fund(&#123; value: sendValue &#125;);<br><br>        &#125;);<br><br>  <br><br>        it(<span class="hljs-string">&quot;cheaperWithdraw ETH from a single founder&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.getAddress()<br><br>          );<br><br>          <span class="hljs-comment">//console.log(startingFundMeBalance);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingDeployBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-comment">//console.log(startingDeployBalance);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionResponse</span> <span class="hljs-operator">=</span> await fundMe.cheaperWithdraw();<br><br>          <span class="hljs-comment">//这里原本是fundMe.provider.getBalance但是v6变成了现在这样</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionReceipt</span> <span class="hljs-operator">=</span> await transactionResponse.wait();<br><br>          <span class="hljs-comment">//通过调试得知这个不是effectivegasPrice而是gasPrice</span><br><br>          const &#123; gasUsed, gasPrice &#125; = transactionReceipt;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">gasCost</span> <span class="hljs-operator">=</span> gasUsed * gasPrice;<br><br>          <span class="hljs-comment">//console.log(gasCost);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.getAddress()<br><br>          );<br><br>          <span class="hljs-comment">//console.log(endingFundMeBalance);</span><br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingDeployerBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-keyword">assert</span>.equal(endingFundMeBalance, <span class="hljs-number">0</span>);<br><br>          <span class="hljs-keyword">assert</span>.equal(<br><br>            (startingFundMeBalance + startingDeployBalance).toString(),<br><br>            (endingDeployerBalance + gasCost).toString()<br><br>          );<br><br>        &#125;);<br><br>        it(<span class="hljs-string">&quot;allows us to cheaperwithdraw with multiple getFunder&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">accounts</span> <span class="hljs-operator">=</span> await ethers.getSigners();<br><br>          <span class="hljs-keyword">for</span> (<span class="hljs-type">let</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">6</span>; i++) &#123;<br><br>            <span class="hljs-type">const</span> <span class="hljs-variable">fundMeConnectedContract</span> <span class="hljs-operator">=</span> await fundMe.connect(accounts[i]);<br><br>            await fundMeConnectedContract.fund(&#123; value: sendValue &#125;);<br><br>          &#125;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.target<br><br>          );<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">startingDeployerBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionResponse</span> <span class="hljs-operator">=</span> await fundMe.cheaperWithdraw();<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">transactionReceipt</span> <span class="hljs-operator">=</span> await transactionResponse.wait();<br><br>          const &#123; gasUsed, gasPrice &#125; = transactionReceipt;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">gasCost</span> <span class="hljs-operator">=</span> gasUsed * gasPrice;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingFundMeBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            fundMe.getAddress()<br><br>          );<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">endingDeployerBalance</span> <span class="hljs-operator">=</span> await ethers.provider.getBalance(<br><br>            deployer<br><br>          );<br><br>          <span class="hljs-keyword">assert</span>.equal(endingFundMeBalance, <span class="hljs-number">0</span>);<br><br>          <span class="hljs-keyword">assert</span>.equal(<br><br>            (startingFundMeBalance + startingDeployerBalance).toString(),<br><br>            (endingDeployerBalance + gasCost).toString()<br><br>          );<br><br>          <span class="hljs-comment">//这里的getFunder改成了gets_funder,但是不改好像没问题</span><br><br>          await <span class="hljs-title function_">expect</span><span class="hljs-params">(fundMe.getFunder(<span class="hljs-number">0</span>)</span>).to.be.reverted;<br><br>          <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">6</span>; i++) &#123;<br><br>            <span class="hljs-keyword">assert</span>.equal(<br><br>              await fundMe.getAddressToAmountFunded(accounts[i].address),<br><br>              <span class="hljs-number">0</span><br><br>            );<br><br>          &#125;<br><br>        &#125;);<br><br>        it(<span class="hljs-string">&quot;Only allows the owner to cheaperwithdraw&quot;</span>, async <span class="hljs-title function_">function</span> <span class="hljs-params">()</span> &#123;<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">accounts</span> <span class="hljs-operator">=</span> await ethers.getSigners();<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">attacker</span> <span class="hljs-operator">=</span> accounts[<span class="hljs-number">1</span>];<br><br>          <span class="hljs-type">const</span> <span class="hljs-variable">attackerConnectedContract</span> <span class="hljs-operator">=</span> await fundMe.connect(attacker);<br><br>          <span class="hljs-comment">//这里需要修改revertedWith(&quot;FundMe__NotOwner&quot;)编程下面的样子，可能是因为这是用户自定义错误的问题吧</span><br><br>          await <span class="hljs-title function_">expect</span><span class="hljs-params">(</span><br><span class="hljs-params"></span><br><span class="hljs-params">            attackerConnectedContract.Withdraw()</span><br><br>          ).to.be.revertedWithCustomError(fundMe, <span class="hljs-string">&quot;Fundme__NotOwner&quot;</span>);<br><br>        &#125;);<br><br>      &#125;);<br><br>    &#125;);<br></code></pre></td></tr></table></figure><h3 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h3><p>因为是在线上环境测试，这里比较容易出现的问题就是钱包里的钱不够，你需要把那个parseETH里面的数字改成0.1个eth</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; getNamedAccounts, ethers, network &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123; developmentChains &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../helper-hardhat-config.js&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123;<br><br>  isCallTrace,<br><br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;hardhat/internal/hardhat-network/stack-traces/message-trace&quot;</span>);<br><br><span class="hljs-keyword">const</span> &#123; assert &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;chai&quot;</span>);<br><br>  <br><br>developmentChains.<span class="hljs-title function_">includes</span>(network.<span class="hljs-property">name</span>)<br><br>  ? describe.<span class="hljs-property">skip</span><br><br>  : <span class="hljs-title function_">describe</span>(<span class="hljs-string">&quot;Fundme&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><br>      <span class="hljs-keyword">let</span> fundMe;<br><br>      <span class="hljs-keyword">let</span> deployer;<br><br>      <span class="hljs-comment">//这里原本时ethers.utils.parseEther</span><br><br>      <span class="hljs-keyword">const</span> sendValue = ethers.<span class="hljs-title function_">parseEther</span>(<span class="hljs-string">&quot;0.05&quot;</span>);<br><br>      <span class="hljs-title function_">beforeEach</span>(<span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><br>        deployer = (<span class="hljs-keyword">await</span> <span class="hljs-title function_">getNamedAccounts</span>()).<span class="hljs-property">deployer</span>;<br><br>        fundMe = <span class="hljs-keyword">await</span> ethers.<span class="hljs-title function_">getContract</span>(<span class="hljs-string">&quot;Fundme&quot;</span>, deployer);<br><br>      &#125;);<br><br>      <span class="hljs-title function_">it</span>(<span class="hljs-string">&quot;allows people to fund and withdraw&quot;</span>, <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><br>        <span class="hljs-keyword">await</span> fundMe.<span class="hljs-title function_">fund</span>(&#123; <span class="hljs-attr">value</span>: sendValue &#125;);<br><br>        <span class="hljs-keyword">await</span> fundMe.<span class="hljs-title function_">cheaperWithdraw</span>();<br><br>        <span class="hljs-keyword">const</span> endingBalance = <span class="hljs-keyword">await</span> ethers.<span class="hljs-property">provider</span>.<span class="hljs-title function_">getBalance</span>(fundMe.<span class="hljs-property">target</span>);<br><br>        assert.<span class="hljs-title function_">equal</span>(endingBalance.<span class="hljs-title function_">toString</span>(), <span class="hljs-string">&quot;0&quot;</span>);<br><br>      &#125;);<br><br>    &#125;);<br></code></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="快速脚本"><a href="#快速脚本" class="headerlink" title="快速脚本"></a>快速脚本</h2><p>这里我在跟课程的时候写的，但是并不知道有什么用</p><h3 id="fundme"><a href="#fundme" class="headerlink" title="fundme"></a>fundme</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs awk">const &#123; getNamedAccount, ethers, getNamedAccounts &#125; = require(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br>  <br><br>async <span class="hljs-keyword">function</span> main() &#123;<br><br>  const &#123; deployer &#125; = await getNamedAccounts();<br><br>  const fundMe = await ethers.getContract(<span class="hljs-string">&quot;Fundme&quot;</span>, deployer);<br><br>  console.log(<span class="hljs-string">&quot;Funding Contract...&quot;</span>);<br><br>  const transactionResponse = await fundMe.fund(&#123;<br><br>    value: ethers.parseEther(<span class="hljs-string">&quot;0.1&quot;</span>),<br><br>  &#125;);<br><br>  await transactionResponse.wait(<span class="hljs-number">1</span>);<br><br>  console.log(<span class="hljs-string">&quot;funded&quot;</span>);<br><br>&#125;<br><br>  <br><br>main()<br><br>  .then(() =&gt; process.<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>))<br><br>  .catch((error) =&gt; &#123;<br><br>    console.error(error);<br><br>    process.<span class="hljs-keyword">exit</span>(<span class="hljs-number">1</span>);<br><br>  &#125;);<br></code></pre></td></tr></table></figure><h3 id="withdraw"><a href="#withdraw" class="headerlink" title="withdraw"></a>withdraw</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs awk">const &#123; getNamedAccounts, ethers &#125; = require(<span class="hljs-string">&quot;hardhat&quot;</span>);<br><br>  <br><br>async <span class="hljs-keyword">function</span> main() &#123;<br><br>  const &#123; deployer &#125; = await getNamedAccounts();<br><br>  const fundMe = await ethers.getContract(<span class="hljs-string">&quot;Fundme&quot;</span>, deployer);<br><br>  console.log(<span class="hljs-string">&quot;Funding...&quot;</span>);<br><br>  const transactionResponse = await fundMe.Withdraw();<br><br>  await transactionResponse.wait(<span class="hljs-number">1</span>);<br><br>  console.log(<span class="hljs-string">&quot;Got it back!&quot;</span>);<br><br>&#125;<br><br>  <br><br>main()<br><br>  .then(() =&gt; process.<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>))<br><br>  .catch((error) =&gt; &#123;<br><br>    console.error(error);<br><br>    process.<span class="hljs-keyword">exit</span>(<span class="hljs-number">1</span>);<br><br>  &#125;);<br></code></pre></td></tr></table></figure><h2 id="vscode的js调试功能"><a href="#vscode的js调试功能" class="headerlink" title="vscode的js调试功能"></a>vscode的js调试功能</h2><p>在vscode的左边选择调试然后打开一个js调试终端<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041402669.png" alt="image.png"><br>然后在调试终端中运行脚本即可</p><p>如果需要查看特定的数据可以直接打开调试控制台输入对应的变量名即可<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041406022.png" alt="image.png"></p><h2 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h2><p>先要在github创建仓库<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041411772.png" alt="Pasted image 20230803215437.png"></p><p>在github上创建好仓库后<br>在终端输入<br><code>git init -b main</code><br>初始化项目文件夹、<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041411348.png" alt="Pasted image 20230803215529.png"></p><p>其中的绿色的是需要上传的，灰色的是在.gitignore中的<br>使用git status可以查看git的暂存状态</p><p><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041412030.png" alt="Pasted image 20230803215839.png"></p><p>使用<br><code>git add .</code><br>即可进行暂存<br>暂存之后的文件就是使用git status展现的如下形式</p><p><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041412277.png" alt="Pasted image 20230803220016.png"></p><p>接下来使用<br><code>git commit -m &#39;first commit&#39;</code><br>这次再使用gitstatus就没有东西了</p><p><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041412315.png" alt="Pasted image 20230803220326.png"></p><p>然后使用<br><code>git remote add origin https://github.com/guhuihey/web3test.git</code><br>连接仓库并命名为origin<br>使用<br><code>git remote -v</code><br>可以查看仓库情况</p><p><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202308041413099.png" alt="Pasted image 20230803220824.png"><br>最后通过<br><code>git push origin main</code><br>上传到github既可，当然因为这一步会有一个身份验证，如果无法验证可以创建一个github token以达成目的</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Windows wsl智能合约编程环境搭建</title>
    <link href="/2023/07/11/Windows%20wsl%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%BC%96%E7%A8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/07/11/Windows%20wsl%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%BC%96%E7%A8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="下载wsl（windows子系统）"><a href="#下载wsl（windows子系统）" class="headerlink" title="下载wsl（windows子系统）"></a>下载wsl（windows子系统）</h1><p>运行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">wsl <span class="hljs-comment">--install</span><br></code></pre></td></tr></table></figure><p>但是似乎不能正常启动<br>会报<br><code>0x80004002</code>之类的错误<br>查了一下针对我遇到的这类错误运行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><br><span class="hljs-built_in">Enable-WindowsOptionalFeature</span> <span class="hljs-literal">-Online</span> <span class="hljs-literal">-FeatureName</span> Microsoft<span class="hljs-literal">-Windows-Subsystem-Linux</span><br></code></pre></td></tr></table></figure><p>即可，在后来使用的时候也遇到了无法启动的问题，似乎是因为windows更新把子系统的组件删掉了，需要<br>在任务面板中打开程序在windows服务中选择子系统相关的选项即可<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202307120858980.png"></p><h1 id="vscode编程环境搭建"><a href="#vscode编程环境搭建" class="headerlink" title="vscode编程环境搭建"></a>vscode编程环境搭建</h1><h2 id="连接wsl"><a href="#连接wsl" class="headerlink" title="连接wsl"></a>连接wsl</h2><p>可以在vscode中ctrl+shift+p创建wsl窗口<br>或者在wsl中输入code .<br>即可拥有liunx命令行版的vscode</p><h2 id="子系统虚拟环境搭建"><a href="#子系统虚拟环境搭建" class="headerlink" title="子系统虚拟环境搭建"></a>子系统虚拟环境搭建</h2><p>然后配置wsl中的nvm环境<br>首先在创建好的文件夹里执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -o- https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/nvm-sh/</span>nvm<span class="hljs-regexp">/v0.39.1/i</span>nstall.sh<br></code></pre></td></tr></table></figure><p>然后重启wsl即可查看nvm版本</p><p>然后执行</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">nvm <span class="hljs-keyword">install</span> nodejs的版本号<br></code></pre></td></tr></table></figure><p>安装js即可</p><h2 id="代码格式化工具"><a href="#代码格式化工具" class="headerlink" title="代码格式化工具"></a>代码格式化工具</h2><p>再vscode中下载solidity+hardhat（现在改名了变成了solidity一个黄色的以太坊图标）<br>它可以使代码高亮<br>然后再安装一个格式化文件prettier<br>并且配置json文件（ctrl+shift+p选择open setting json）<br>在上一条语句后面加上逗号：<br>把以下语句加入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><br>    &quot;<span class="hljs-selector-attr">[solidity]</span>&quot;: &#123;<br><br>        &quot;editor<span class="hljs-selector-class">.defaultFormatter</span>&quot;: <span class="hljs-string">&quot;NomicFoundation.hardhat-solidity&quot;</span><br><br>    &#125;,<br>   <br>    &quot;<span class="hljs-selector-attr">[javascript]</span>&quot;: &#123;<br><br>        &quot;editor<span class="hljs-selector-class">.defaultFormatter</span>&quot;:<span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br><br>    &#125;,<br></code></pre></td></tr></table></figure><p>即可实现vs自动格式化<br>当然除此之外还需要打开open user setting<br>配置format on save 和default format</p><p>同样prettier也可以将solidity格式化而不一定要使用hardhat<br>可以通过<br><code>yarn add prettier prettier-plugin-solidity</code><br>安装prettier的solidity插件然后在项目文件夹中创建一个.prettierrc文件，然后输入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;<br>    <span class="hljs-regexp">/*  prettier的配置 */</span><br>    <span class="hljs-string">&quot;prettier.printWidth&quot;</span>: <span class="hljs-number">100</span>, <span class="hljs-regexp">//</span> 超过最大值换行<br>    <span class="hljs-string">&quot;prettier.tabWidth&quot;</span>: <span class="hljs-number">4</span>, <span class="hljs-regexp">//</span> 缩进字节数<br>    <span class="hljs-string">&quot;prettier.useTabs&quot;</span>: false, <span class="hljs-regexp">//</span> 缩进不使用tab，使用空格<br>    <span class="hljs-string">&quot;prettier.semi&quot;</span>: true, <span class="hljs-regexp">//</span> 句尾添加分号<br>    <span class="hljs-string">&quot;prettier.singleQuote&quot;</span>: true, <span class="hljs-regexp">//</span> 使用单引号代替双引号<br>    <span class="hljs-regexp">//</span>这里只是示例更多相关设置可以自行查询<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h2><p>需要安装安装yarn，运行命令corepack enable即可<br>然后获取solc<br>运行 yarn add solc或者npm类命令也可<br>yarn add <a href="mailto:&#x73;&#111;&#108;&#x63;&#x40;&#48;&#x2e;&#x38;&#x2e;&#48;">&#x73;&#111;&#108;&#x63;&#x40;&#48;&#x2e;&#x38;&#x2e;&#48;</a>可指定solc的版本<br>yarn global add solc即可全局安装</p><p>然后运行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">yarn solcjs <span class="hljs-attr">--bin</span> <span class="hljs-attr">--abi</span> <span class="hljs-attr">--include-path</span> node_modules/ <span class="hljs-attr">--base-path</span> . -o . simple-storage<span class="hljs-selector-class">.sol</span><br><span class="hljs-comment">//注意哈，这里的simple-storage.sol是目录下的文件名</span><br></code></pre></td></tr></table></figure><p>编译simple-storage.sol得到编译后的文件</p><p>同时可以将这个脚本加入到<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202307120919175.png"><br>即可使用</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yarn compile</span> <br><br></code></pre></td></tr></table></figure><p>快速编译</p><h1 id="虚拟链上环境"><a href="#虚拟链上环境" class="headerlink" title="虚拟链上环境"></a>虚拟链上环境</h1><h2 id="ganache"><a href="#ganache" class="headerlink" title="ganache"></a>ganache</h2><p>这里选择ganache在windows上安装，当然也可以直接选择在子系统上安装<br>下面是转自github上大佬对相关问题的解决</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">**选项 <span class="hljs-number">1</span>：如果您想在 WSL 本身上安装和运行 Ganache👇**<br><br><span class="hljs-number">1</span>.  在 WSL 上安装 Ganache  <br>    `yarn <span class="hljs-keyword">add </span>ganache`<br>    <br><span class="hljs-number">2</span>.  运行甘纳许  <br>    `yarn run ganache`<br>    <br><span class="hljs-number">3</span>.  从终端屏幕底部 复制 RPC URL ( **<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">8545</span> )，上面写着****RPC listening on <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">8545</span>**  <br>    并将其粘贴到 ethers.<span class="hljs-keyword">js </span><span class="hljs-keyword">JsonRpcProvider( </span>) 函数参数中。<br>    <br><span class="hljs-number">4</span>.  还要在终端屏幕上滚动时复制任何**私钥，并将其粘贴到 ethers.<span class="hljs-keyword">js </span>Wallet( ) 函数参数中。**<br>    <br><span class="hljs-number">5</span>.  现在让这个终端在后台运行，因为我们希望 Ganache 服务器运行。  <br>    因此，打开一个**新终端** 并通过运行以下命令来运行 deploy.<span class="hljs-keyword">js </span>文件：  <br>    `node deploy.<span class="hljs-keyword">js`</span><br><span class="hljs-keyword"></span>    <br><br>**选项 <span class="hljs-number">2</span>：如果您想在 Windows 上运行 Ganache（如果您已经在 Windows 上安装了 Ganache）👇**<br><br><span class="hljs-number">1</span>.  转到 Ganache Windows GUI 右上角的设置（齿轮图标）。  <br>    移至**服务器**选项卡并将**主机名**更改为**WSL**（我的也适用于 VirtualBox 和 WiFi）  <br>    端口号和网络 ID 可以保持安全。<br>    <br><span class="hljs-number">2</span>.  单击UI 右上角的**保存并重新启动。**<br>    <br><span class="hljs-number">3</span>.  **现在从RPC 服务器**复制 RPC URL 并将其粘贴到 ethers.<span class="hljs-keyword">js </span><span class="hljs-keyword">JsonRpcProvider() </span>函数参数中。<br>    <br><span class="hljs-number">4</span>.  同时复制任何**私钥**并将其粘贴到 ethers.<span class="hljs-keyword">js </span>Wallet( ) 函数参数中。<br>    <br><span class="hljs-number">5</span>.  **重要步骤（防火墙设置）**：  <br>    转到Windows 上**具有高级安全性的 Windows Defender 防火墙。**  <br>    单击**Inbound Rules** &amp; Search for Ganache  <br>    右键单击​​ Ganache &amp; Go to **Properties**。**然后选中显示允许连接的**  <br>    复选框并单击应用。并关闭此防火墙窗口。<br>    <br><span class="hljs-number">6</span>.  通过在 WSL 终端窗口中运行以下命令来运行 deploy.<span class="hljs-keyword">js </span>文件：  <br>    `node deploy.<span class="hljs-keyword">js`</span><br><span class="hljs-keyword"></span>    <br><br>非常感谢所有回答并提出疑问的人。✌<br></code></pre></td></tr></table></figure><p>虽然我在这个地方卡了很久但是最后解决的时候发现并没有那么麻烦，<br>在网络选择上直接选择主机所处的网段地址即可，最大的问题还是各个包的版本问题</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;<br><br>  <span class="hljs-string">&quot;dependencies&quot;</span>: &#123;<br><br>    <span class="hljs-string">&quot;dotenv&quot;</span>: <span class="hljs-string">&quot;^16.3.1&quot;</span>,<br><br>    <span class="hljs-string">&quot;ethers&quot;</span>: <span class="hljs-string">&quot;5.6.2&quot;</span>,<br><br>    <span class="hljs-string">&quot;fs-extra&quot;</span>: <span class="hljs-string">&quot;^11.1.1&quot;</span>,<br><br>    <span class="hljs-string">&quot;ganache&quot;</span>: <span class="hljs-string">&quot;^7.9.0&quot;</span>,<br><br>    <span class="hljs-string">&quot;solc&quot;</span>: <span class="hljs-string">&quot;0.8.8&quot;</span><br><br>  &#125;,<br>  <span class="hljs-regexp">//</span>非唯一正确版本，仅供参考<br></code></pre></td></tr></table></figure><p>此外附上linux的ganache相关命令</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a 或 –accounts：指定启动时要创建的测试账户数量。</span><br><span class="hljs-deletion">-e 或 –defaultBalanceEther：分配给每个测试账户的 ether 数量，默认值为 100。</span><br><span class="hljs-deletion">-b 或 r –blockTime：指定自动挖矿的blockTime，以秒为单位，默认值为 0，表示不进行自动挖矿。</span><br><span class="hljs-deletion">-d 或 –deterministic：基于预定的助记词（mnemonic）生成固定的测试账户地址。</span><br><span class="hljs-deletion">-n 或 –secure：默认锁定所有测试账户，有利于进行第三方交易签名。</span><br><span class="hljs-deletion">-m 或 –mnemonic：用于生成测试账户地址的助记词。</span><br><span class="hljs-deletion">-p 或 –port：设置监听端口，默认值为8545。</span><br><span class="hljs-deletion">-h 或 –hostname：设置监听主机，默认值同 NodeJS 的 server.listen()。</span><br><span class="hljs-deletion">-s 或 –seed：设置生成助记词的种子。</span><br><span class="hljs-deletion">-g 或 –gasPrice：设定 Gas 价格， 默认值为 20000000000。</span><br><span class="hljs-deletion">-l 或 –gasLimit：设定 Gas 上限，默认值为 90000。</span><br><span class="hljs-deletion">-f 或 –fork：从一个运行中的以太坊节点客户端软件的指定区块分叉，输入值应当是该节点旳 HTTP 地址和端口，例如 http://localhost:8545。可选使用 @ 标记来指定具体区块，例如：http://localhost:8545@1599200。</span><br><span class="hljs-deletion">-I 或 –networkId：指定网络 id，默认值为当前时间，或使用所分叉链的网络 id。</span><br>–db：设置保存链数据的目录，如果该路径中已经有链数据，ganache-cli 将用它初始化链而不是重新创建。<br>–debug：输出 VM 操作码，用于调试。<br>–mem：输出 ganache-cli 内存使用统计信息，这将替代标准的输出信息。<br>–noVMErrorsOnRPCResponse：不把失败的交易作为 RCP 错误发送，开启这个标志使错误报告方式兼容其他的节点客户端，例如 geth 和 Parity。<br>特殊选项：<br>–account：指定账户私钥和账户余额来创建初始测试账户，可多次设置：<br><br></code></pre></td></tr></table></figure><p>正常运行使用<br><code>yarn run ganache</code>即可</p><h2 id="子系统与主机网络之间的问题（因为网络知识不足不知道如何解决）"><a href="#子系统与主机网络之间的问题（因为网络知识不足不知道如何解决）" class="headerlink" title="子系统与主机网络之间的问题（因为网络知识不足不知道如何解决）"></a>子系统与主机网络之间的问题（因为网络知识不足不知道如何解决）</h2><p>这里使因为前面ganache的问题无法解决而发现的奇怪的地方<br>一开始以为是防火墙的问题导致子系统虚拟机无法访问主机，所以尝试性的区ping了一下，发现子系统确实ping不通。<br>结果阴差阳错之下找到了以为遇到了相同问题的大佬。<br>根据大佬的说法添加一条防火墙规则即可<br>&#96;New-NetFirewallRule -DisplayName “WSL” -Direction Inbound  -InterfaceAlias “vEthernet (WSL)”  -Action Allow<br>似乎还是不行<br>然后区看了下另一篇推荐的博客<br>发现给出上一个建议的博主使用的命令是优化过的版本，原版本是使用ip地址制定规则，但是他给出的是根据wsl的接口制定的规则；<br>原文：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\WINDOWS\system32&gt; <span class="hljs-variable">$myIp</span> = (Ubuntu1804 run <span class="hljs-string">&quot;cat /etc/resolv.conf | grep nameserver | cut -d&#x27; &#x27; -f2&quot;</span>)<br><span class="hljs-built_in">PS</span> C:\WINDOWS\system32&gt; <span class="hljs-variable">$myIp</span><br><span class="hljs-number">172.21</span>.<span class="hljs-number">0.1</span><br><span class="hljs-built_in">PS</span> C:\WINDOWS\system32&gt;  <span class="hljs-built_in">New-NetFirewallRule</span> <span class="hljs-literal">-DisplayName</span> <span class="hljs-string">&quot;WSL&quot;</span> <span class="hljs-literal">-Direction</span> Inbound  <span class="hljs-literal">-LocalAddress</span> <span class="hljs-variable">$myIp</span> <span class="hljs-literal">-Action</span> Allow<br></code></pre></td></tr></table></figure><p>理解：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$myIp</span>=<span class="hljs-string">&#x27;子系统ip&#x27;</span><br><br><span class="hljs-keyword">New</span>-NetFirewallRule -DisplayName <span class="hljs-string">&quot;WSL&quot;</span> -Direction Inbound  -LocalAddress <span class="hljs-symbol">$myIp</span> -Action Allow<br></code></pre></td></tr></table></figure><p>我本来以为那个ip是是子系统ip，但是发现只有当那个ip为空（允许所有本地ip访问）或者ip为主机ip是才能ping通。<br>即：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$myIp</span>=<span class="hljs-string">&#x27;主机ip&#x27;</span><br><br><span class="hljs-keyword">New</span>-NetFirewallRule -DisplayName <span class="hljs-string">&quot;WSL&quot;</span> -Direction Inbound  -LocalAddress <span class="hljs-symbol">$myIp</span> -Action Allow<br></code></pre></td></tr></table></figure><p>然后我去试了下那个接口的<br>还是ping不通，但是突然想起来我能用wireshark来抓包看一下通过接口的流量啊<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202307120939656.png"><br>然后又去试了下放子系统ip的<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202307120940842.png"></p><p>结果是一样的，但是并不知道是哪里出了问题，还请各位大佬指点斧正。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>blog搭建</title>
    <link href="/2023/06/30/blog%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/06/30/blog%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://www.bilibili.com/video/BV1ts4y1f7Gu/?spm_id_from=333.788.recommend_more_video.-1&vd_source=fe3d172afc9c02fc6b38374df73e29ff">超详细！0成本搭建个人网站！！【建议收藏】_哔哩哔哩_bilibili</a><br>下载git ,nodejs,hexo<br>然后从github上下载主题到hexoblog的themes文件夹（需要解压）<br>然后修改blog文件下的config.yml文件<br>如果要修改主题的一些信息则修改themes文件下的config文件<br>每次修改后都要在git中hexo g<br>hexo s重启博客<br>然后创建gitee仓库<br>然后：git中输入：git config –global user.name “guhuihey”<br>git config –global user.email “<a href="mailto:&#49;&#50;&#x35;&#x37;&#x36;&#49;&#x39;&#55;&#43;&#103;&#x75;&#x68;&#117;&#x69;&#x68;&#101;&#121;&#64;&#x75;&#x73;&#101;&#x72;&#46;&#x6e;&#111;&#x72;&#101;&#112;&#108;&#121;&#46;&#103;&#105;&#x74;&#x65;&#x65;&#46;&#99;&#111;&#109;">&#49;&#50;&#x35;&#x37;&#x36;&#49;&#x39;&#55;&#43;&#103;&#x75;&#x68;&#117;&#x69;&#x68;&#101;&#121;&#64;&#x75;&#x73;&#101;&#x72;&#46;&#x6e;&#111;&#x72;&#101;&#112;&#108;&#121;&#46;&#103;&#105;&#x74;&#x65;&#x65;&#46;&#99;&#111;&#109;</a>“<br>然后<code>$ cat ~/.ssh/id_rsa.pub</code><br>获取生成的ssh密钥<br>然后再gitee中创建ssh密钥<br>然后<code>$ ssh -T git@gitee.com</code><br>再&#96;npm install hexo-deployer-git –save<br>最后hexo g，s，d（部署）完成（这里hexo  s时在本地查看，hexo d才是部署到服务器上）<br>但是这里将博客强制使用gitpages需要实名认证，暂时未弄好</p><p>第二次使用：<br>这里注意是要在blog文件夹中执行命令</p><p>因为gitee不能使用图床所以我干脆用github来搭<br>因为之前用gitee搭建的时候所有东西都是弄好了的<br>所以按理来说只要把地址和链接改成github的就好<br>首先修改deploy的发布地址<br>修改成如下地址<br><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202306301848933.png"></p><p>查看并修改关联用户信息</p><p><img src="https://raw.githubusercontent.com/guhuihey/IMG/main/img/202306301921572.PNG"><br>然后通过<br><code>ssh-keygen -t rsa -C “这里换上你的邮箱”</code><br>这条命令生成对应ssh公私钥<br>然后再github的设置中将新生成的公钥放入ssh连接中<br>最后通过git检验即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/08/hello-world/"/>
    <url>/2023/03/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
